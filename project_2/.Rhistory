ggplot(food.reg.df, aes(x=year, y=`Food Pounds`, color = year)) + geom_boxplot() + theme_minimal() + theme(axis.text.x =  element_text(angle = 45), legend.position = "none") +
labs(x=expression('Year'), y=expression('Pounds of Food'),
title=expression('Boxplots of Distribution of Pounds of Food to Individuals/Family Units by Year'))
ggplot(food.reg.df, aes(x=ndate, y=`Food Pounds`)) + geom_smooth(se=FALSE) + geom_smooth(method = "lm", se=FALSE, color='red') +
theme_minimal() + labs(x=expression('Year'), y=expression('Pounds of Food'),
title=expression('Average Amount of Food Provided (by lbs.) vs. Year'))
ggplot(school.reg.df, aes(x=year, y=`School Kits`)) + geom_boxplot()
ggplot(school.reg.df, aes(x=as.numeric(year), y=`School Kits`)) + geom_smooth()
ggplot(school.reg.df, aes(x=ndate, y=`School Kits`)) + geom_smooth() + geom_smooth(method = "lm")
ggplot(school.reg.df, aes(x=year, y=`School Kits`)) + geom_boxplot() + theme_minimal() + theme(axis.text.x =  element_text(angle = 45), legend.position = "none") +
labs(x=expression('Year'), y=expression('Number of School Kits Provided'),
title=expression('Boxplots of Distribution of School Kits to Individuals/Family Units by Year'))
ggplot(school.reg.df, aes(x=ndate, y=`School Kits`)) + geom_smooth(se=FALSE) + geom_smooth(method = "lm", se=FALSE, color='red') +
theme_minimal() + labs(x=expression('Year'), y=expression('Pounds of Food'),
title=expression('Average Number of School Kits Provided by UMD vs. Year'))
ggplot(school.reg.df, aes(x=year, y=`School Kits`), color = year) + geom_boxplot() + theme_minimal() + theme(axis.text.x =  element_text(angle = 45), legend.position = "none") +
labs(x=expression('Year'), y=expression('Number of School Kits Provided'),
title=expression('Boxplots of Distribution of School Kits to Individuals/Family Units by Year'))
ggplot(school.reg.df, aes(x=ndate, y=`School Kits`)) + geom_smooth(se=FALSE) + geom_smooth(method = "lm", se=FALSE, color='red') +
theme_minimal() + labs(x=expression('Year'), y=expression('Pounds of Food'),
title=expression('Average Number of School Kits Provided by UMD vs. Year'))
ggplot(school.reg.df, aes(x=year, y=`School Kits`, color=year)) + geom_boxplot() + theme_minimal() + theme(axis.text.x =  element_text(angle = 45), legend.position = "none") +
labs(x=expression('Year'), y=expression('Number of School Kits Provided'),
title=expression('Boxplots of Distribution of School Kits to Individuals/Family Units by Year'))
ggplot(school.reg.df, aes(x=ndate, y=`School Kits`)) + geom_smooth(se=FALSE) + geom_smooth(method = "lm", se=FALSE, color='red') +
theme_minimal() + labs(x=expression('Year'), y=expression('Pounds of Food'),
title=expression('Average Number of School Kits Provided by UMD vs. Year'))
View(UMD.data)
install.packages("shiny")
shiny::runApp('hw4_app')
install.packages(rsconnect)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='arquinter',
token='CD1432E6942E6721F1DDA7CC3ECCE896',
secret='<SECRET>')
rsconnect::setAccountInfo(name='arquinter',
token='CD1432E6942E6721F1DDA7CC3ECCE896',
secret='<SECRET>')
rsconnect::setAccountInfo(name='arquinter',
token='CD1432E6942E6721F1DDA7CC3ECCE896',
secret='<SECRET>')
rsconnect::setAccountInfo(name='arquinter',
token='CD1432E6942E6721F1DDA7CC3ECCE896',
secret='O6bgJalhJ3d9d6kEAYrPnth8x37tQJAsOYZT6HCd')
data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";")
library(tidyverse)
library(readr)
data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";")
View(data)
data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ;)
library(tidyverse)
library(readr)
data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";")
View(data)
View(data)
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible = "Y", !is.na(`Victim Age`))
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible == "Y", na.omit(`Victim Age`))
View(incidence.data)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible == "Y", na.omit(`Victim Age`))
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible == "Y", drop_na(`Victim Age`))
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible == "Y", drop_na(`Victim Age`))
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";")
%>% filter(Forcible == "Y") %>% drop_na(`Victim Age`)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>%
filter(Forcible == "Y") %>% drop_na(`Victim Age`)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>%
filter(Forcible == "Y") %>% drop_na(`Victim Age`)
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible == "Y"(`Victim Age`))
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>% filter(Forcible == "Y", na.omit(`Victim Age`))
View(incidence.data)
table(incidence.data[,])
table(incidence.data[,6])
colnames(incidence.data)[colSums(is.na(incidence.data)) > 0]
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>%
filter(Forcible == "Y") %>% drop_na(`Victim Age`)
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
shiny::runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>%
filter(Forcible == "Y") %>% drop_na(`Victim Age`)
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
library(tidyverse)
library(readr)
incidence.data = read_delim("https://www.chapelhillopendata.org/explore/dataset/police-incident-reports-written/download/?format=csv&refine.date_of_report=2017&timezone=America/New_York&use_labels_for_header=true", delim = ";") %>%
filter(Forcible == "Y") %>% drop_na(`Victim Age`)
shiny::runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
shiny::runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
shiny::runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
ggplot(incidence.data, aes(x=data, y=`Victim Age`)) + geom_violin() + labs(x = input$vars)
shiny::runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
runApp('GitHub/bios611-homework-fall-2019-arquinter/homework/hw4_app')
install.packages("httr")
install.packages("jsonlite")
library(httr)
test = GET("https://opendata.arcgis.com/datasets/864d98a61f8c45b7979401026571c9c6_0.geojson")
View(test)
content(test, "text")
View(test)
Homeless_Population_Point_in_Time_Count <- read.csv("~/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
View(Homeless_Population_Point_in_Time_Count)
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
#load in dataset
UMD.data=fread(file="C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_1/data/UMD_Services_Provided_20190719.tsv")
Durham.homeless.pop <- fread("~/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
#load in dataset
UMD.data=fread(file="C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_1/data/UMD_Services_Provided_20190719.tsv")
Durham.homeless.pop <- fread("~/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
#load in dataset
UMD.data=fread(file="C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_1/data/UMD_Services_Provided_20190719.tsv")
Durham.homeless.pop <- fread("~/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
View(Durham.homeless.pop)
levels(Durham.homeless.pop$measures)
levels(as.factor(Durham.homeless.pop$measures))
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
#load in dataset
UMD.data=fread(file="C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_1/data/UMD_Services_Provided_20190719.tsv")
Durham.homeless.pop = fread("~/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
Durham.homeless.counts = Durham.homeless.pop %>% filter(measures %in% c("Total Homeless", "Chronically Homeless", "Sheltered Homeless",
"Sheltered Chronically Homeless", "Unsheltered Homeless", "Unsheltered Chronically Homeless"))
View(Durham.homeless.counts)
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
#load in dataset
UMD.data=fread(file="C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_1/data/UMD_Services_Provided_20190719.tsv")
Durham.homeless.pop = fread("~/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
Durham.homeless.counts = Durham.homeless.pop %>% filter(measures %in% c("Total Homeless", "Chronically Homeless", "Sheltered Homeless",
"Sheltered Chronically Homeless", "Unsheltered Homeless", "Unsheltered Chronically Homeless"))
View(Durham.homeless.counts)
View(Durham.homeless.pop)
View(Durham.homeless.counts)
-0.4284 + 0.5893*(2.44)
exp(1.0095)
exp(.5893)
exp(.5893-(1.96*0.0650))
.5893-(1.96*0.0650)
.5893+(1.96*0.0650)
exp(.5893+(1.96*0.0650))
(.5893/.0650)^2
pchisq(0.05m 1)
pchisq(0.05, 1)
pchisq(0.95, 1)
qchisq(0.95, 1)
560.8664/171
sqrt(3.28)*(0.0650)
(.5893/.1177)^2
-0.5018 + 0.4520 + 0.5462*(2.44)
-0.5018 + 0.5462*(2.44)
exp(1.2829)
exp(0.8309)
560.8664 - 551.8049
qchisq(.95, 3)
0.0885 - 0.1728*(1) + 0.5462*(2.44)
exp(1.2484)
0.0885 - 0.1728*(4) + 0.5462*(2.44)
exp(0.7300)
560.8664 - 552.7937
qchisq(.95, 1)
552.7937 - 551.8049
qchisq(.95, 2)
qnorm(.975)
qnorm(.975)^2 + qnorm(.975)^2
shiny::runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
shiny::runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
Durham.homeless.counts[,5]=="Total Homeless"
Durham.homeless.counts[Durham.homeless.counts[,5]=="Total Homeless",]
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
Durham.homeless.counts[Durham.homeless.counts[,5]=="Total Homeless",]
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
Durham.homeless.counts[Durham.homeless.counts[,5]=="Total Homeless",]
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
mtcars
19.4332 - 16.6995
2log(1.8)/90
2*log(1.8)/90
(log(1.8))^2/90
(log(1.8))^2/(14/450)
400/70
2*(20)^2}{==/70
2*(20)^2/70
50*log(5) + 9*0(log(5) + log(1.8)) - 50 - 90 - 183.4
50*log(5) + 90*(log(5) + log(1.8)) - 50 - 90 - 183.4
140*log(7) - 140 - 183.4
2*(50.9726 - 45.1779)
qchisq(.95, 1)
2*(-37.04 + 45.1779)
2*(-37.04 + 50.9726)
(1.8^2)*(14/450)
3.8415*.1008
sqrt(3.8415*.1008)
1.8 + .6223
1.8 - .6223
50*log(\frac5{14}) + 90*log(\frac9{14}) + log(combn(140, 50))
50*log(5/14) + 90*log(9/14) + log(combn(140, 50))
log(combn(140, 50))
log(combn(50, 140))
50*log(5/14) + 90*log(9/14)
50*log(.5) + 90*log(.5)
97.0406-91.2459
2*5.7947
shiny::runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
install.packages("shinydashboard")
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
dataset <- read.table("C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_2/data/UMD_Services_Provided_20190719", fill=TRUE, header=FALSE)
library(magrittr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(magrittr)
library(lubridate)
library(ggplot2)
dataset <- read.table("C:/Users/alex/Documents/GitHub/bios611-projects-fall-2019-arquinter/project_1/data/UMD_Services_Provided_20190719.tsv", fill=TRUE, header=FALSE)
dates = dataset %>%
separate(V1, into=c("Month", "Day", "Year"))
fooddata <- dates[,c(1,3,6,7)]
fooddata <- fooddata[-1,]
fooddata$Month <- as.numeric(fooddata$Month)
fooddatabymonth <- fooddata[order(fooddata$Month),]
fooddatabyyear <- fooddata[order(fooddata$Year),]
fooddata2018 <- subset(fooddatabymonth, fooddatabymonth[2]==2018)
fooddata2017 <- subset(fooddatabymonth, fooddatabymonth[2]==2017)
fooddata2016 <- subset(fooddatabymonth, fooddatabymonth[2]==2016)
fooddata2015 <- subset(fooddatabymonth, fooddatabymonth[2]==2015)
fooddata2014 <- subset(fooddatabymonth, fooddatabymonth[2]==2014)
fooddata2013 <- subset(fooddatabymonth, fooddatabymonth[2]==2013)
fooddata2012 <- subset(fooddatabymonth, fooddatabymonth[2]==2012)
fooddata2011 <- subset(fooddatabymonth, fooddatabymonth[2]==2011)
fooddata2010 <- subset(fooddatabymonth, fooddatabymonth[2]==2010)
fooddata2009 <- subset(fooddatabymonth, fooddatabymonth[2]==2009)
fooddata2008 <- subset(fooddatabymonth, fooddatabymonth[2]==2008)
```
### We create tables of the total food pounds per month for every year from 2008 - 2018
total2018 <- matrix(nrow=12, ncol=2)
total2018[,1] <- c(01,02,03,04,05,06,07,08,09,10,11,12)
for (i in 1:12){
monthsub <- subset(fooddata2018, fooddata2018[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2018[i,2] <- monthsub
}
total2018 <- data.frame(total2018)
sum2018 <- sum(total2018[,2])
##### analysis for year 2017 by month ####
total2017 <- matrix(nrow=12, ncol=2)
total2017[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2017, fooddata2017[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2017[i,2] <- monthsub
}
total2017 <- data.frame(total2017)
sum2017 <- sum(total2017[,2])
##### analysis for year 2016 by month ####
total2016 <- matrix(nrow=12, ncol=2)
total2016[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2016, fooddata2016[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2016[i,2] <- monthsub
}
total2016 <- data.frame(total2016)
sum2016 <- sum(total2016[,2])
##### analysis for year 2015 by month ####
total2015 <- matrix(nrow=12, ncol=2)
total2015[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2015, fooddata2015[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2015[i,2] <- monthsub
}
total2015 <- data.frame(total2015)
sum2015 <- sum(total2015[,2])
##### analysis for year 2014 by month ####
total2014 <- matrix(nrow=12, ncol=2)
total2014[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2014, fooddata2014[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2014[i,2] <- monthsub
}
total2014 <- data.frame(total2014)
sum2014 <- sum(total2014[,2])
##### analysis for year 2013 by month ####
total2013 <- matrix(nrow=12, ncol=2)
total2013[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2013, fooddata2013[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2013[i,2] <- monthsub
}
total2013 <- data.frame(total2013)
sum2013 <- sum(total2013[,2])
##### analysis for year 2012 by month ####
total2012 <- matrix(nrow=12, ncol=2)
total2012[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2012, fooddata2012[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2012[i,2] <- monthsub
}
total2012 <- data.frame(total2012)
sum2012 <- sum(total2012[,2])
##### analysis for year 2011 by month ####
total2011 <- matrix(nrow=12, ncol=2)
total2011[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2011, fooddata2011[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2011[i,2] <- monthsub
}
total2011 <- data.frame(total2011)
sum2011 <- sum(total2011[,2])
##### analysis for year 2010 by month ####
total2010 <- matrix(nrow=12, ncol=2)
total2010[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2010, fooddata2010[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2010[i,2] <- monthsub
}
total2010 <- data.frame(total2010)
sum2010 <- sum(total2010[,2])
##### analysis for year 2009 by month ####
total2009 <- matrix(nrow=12, ncol=2)
total2009[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2009, fooddata2009[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2009[i,2] <- monthsub
}
total2009 <- data.frame(total2009)
sum2009 <- sum(total2009[,2])
##### analysis for year 2008 by month ####
total2008 <- matrix(nrow=12, ncol=2)
total2008[,1] <- c("January","February","March","April","May","June","July","August","September","October","November","December")
for (i in 1:12){
monthsub <- subset(fooddata2008, fooddata2008[,1]==i)
monthsub$V5 <- as.numeric(monthsub$V5)
monthsub <- sum(monthsub[,4])
total2008[i,2] <- monthsub
}
total2008 <- data.frame(total2008)
sum2008 <- sum(total2008[,2])
helperfunction1 <- function(z){
currentdata <- get(paste("total",z,sep = ""))
bar2018 <- ggplot(data=currentdata, aes(x=  factor(c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec") , level=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")),y=currentdata[,2]) ) +
geom_bar(stat="identity")
bar2018 + ggtitle(paste("Total Amount of Food per Month from", z))+
xlab("Month")+ ylab("Total Amount of Food in Pounds")
}
shiny::runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2/test')
library(rsconnect)
shiny::runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
library(httr)
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
#load in dataset
UMD.data=fread(file=GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv"))
Durham.homeless.pop = fread(GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv"))
Durham.homeless.counts = Durham.homeless.pop %>% filter(measures %in% c("Total Homeless", "Chronically Homeless", "Sheltered Homeless",
"Sheltered Chronically Homeless", "Unsheltered Homeless", "Unsheltered Chronically Homeless"))
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
#load in dataset
UMD.data=read_tsv(text=GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv"))
Durham.homeless.pop = read_csv(text=GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv"))
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
#load in dataset
UMD.data=read_tsv(file=GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv"))
Durham.homeless.pop = read.csv(text=GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv"))
Durham.homeless.pop = read.csv(getURL=GET("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv"))
Durham.homeless.pop = read.csv(text=getURL("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv"))
install.packages("RCurl")
library(RCurl)
Durham.homeless.pop = read.csv(text=getURL("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv"))
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
library(RCurl)
#load in dataset
UMD.data=read_tsv(url="https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv")
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
library(RCurl)
#load in dataset
UMD.data=read_tsv(url("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv"))
View(UMD.data)
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
library(RCurl)
#load in dataset
UMD.data=read_tsv("https://github.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv")
str(UMD.data)
UMD.data=read_tsv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-arquinter/tree/master/project_2/data/UMD_Services_Provided_20190719.tsv")
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
library(RCurl)
#load in dataset
UMD.data=read_tsv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-arquinter/master/project_2/data/UMD_Services_Provided_20190719.tsv", na="**")
View(UMD.data)
#Load in necessary packages
library(tidyverse)
library(ggplot2)
library(data.table)
library(shiny)
library(httr)
library(RCurl)
#load in dataset
UMD.data=read_tsv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-arquinter/master/project_2/data/UMD_Services_Provided_20190719.tsv", na="**")
Durham.homeless.pop = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-arquinter/master/project_2/data/Homeless_Population_Point_in_Time_Count.csv")
Durham.homeless.counts = Durham.homeless.pop %>% filter(measures %in% c("Total Homeless", "Chronically Homeless", "Sheltered Homeless",
"Sheltered Chronically Homeless", "Unsheltered Homeless", "Unsheltered Chronically Homeless"))
View(Durham.homeless.counts)
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
deployApp()
runApp('GitHub/bios611-projects-fall-2019-arquinter/project_2')
